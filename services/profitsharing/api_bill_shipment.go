// Copyright 2021 Tencent Inc. All rights reserved.
//
// 微信支付分账API
//
// 微信支付分账API
//
// API version: 0.0.9

// Code generated by WechatPay APIv3 Generator based on [OpenAPI Generator](https://openapi-generator.tech); DO NOT EDIT.

package profitsharing

import (
	"context"
	"fmt"
	nethttp "net/http"
	neturl "net/url"

	"github.com/wechatpay-apiv3/wechatpay-go/core"
	"github.com/wechatpay-apiv3/wechatpay-go/core/consts"
	"github.com/wechatpay-apiv3/wechatpay-go/services"
)

type BillShipmentApiService services.Service

// SplitBill 获取分账账单文件下载地址
//
// 微信支付按天提供分账账单文件，商户可以通过该接口获取账单文件的下载地址。文件内包含分账相关的金额、时间等信息，供商户核对到账等情况。
//
// 1. 微信侧未成功的分账单不会出现在对账单中。
// 2. 对账单中涉及金额的字段单位为“元”；
// 3. 对账单接口只能下载三个月以内的账单。
// 4. 账单文件包括明细数据和汇总数据两部分，每一部分都包含一行表头和若干行具体数据。
// 5. 明细数据每一行对应一笔分账或一笔回退，同时每一个数据前加入了字符\`，以避免数据被Excel按科学计数法处理。如需汇总金额等数据，可以批量替换掉该字符。
func (a *BillShipmentApiService) SplitBill(ctx context.Context, req SplitBillRequest) (resp *SplitBillResponse, result *core.APIResult, err error) {
	var (
		localVarHTTPMethod   = nethttp.MethodGet
		localVarPostBody     interface{}
		localVarQueryParams  neturl.Values
		localVarHeaderParams = nethttp.Header{}
	)

	localVarPath := consts.WechatPayAPIServer + "/v3/profitsharing/bills"
	// Make sure All Required Params are properly set
	if req.BillDate == nil {
		return nil, nil, fmt.Errorf("field `BillDate` is required and must be specified in SplitBillRequest")
	}

	// Setup Query Params
	localVarQueryParams = neturl.Values{}
	if req.SubMchid != nil {
		localVarQueryParams.Add("sub_mchid", core.ParameterToString(*req.SubMchid, ""))
	}
	localVarQueryParams.Add("bill_date", core.ParameterToString(*req.BillDate, ""))
	if req.TarType != nil {
		localVarQueryParams.Add("tar_type", core.ParameterToString(*req.TarType, ""))
	}

	// Determine the Content-Type Header
	localVarHTTPContentTypes := []string{}
	// Setup Content-Type
	localVarHTTPContentType := core.SelectHeaderContentType(localVarHTTPContentTypes)

	// Perform Http Request
	result, err = a.Client.Request(ctx, localVarHTTPMethod, localVarPath, localVarHeaderParams, localVarQueryParams, localVarPostBody, localVarHTTPContentType)
	if err != nil {
		return nil, result, err
	}

	// Extract SplitBillResponse from Http Response
	resp = new(SplitBillResponse)
	err = core.UnMarshalResponse(result.Response, resp)
	if err != nil {
		return nil, result, err
	}
	return resp, result, nil
}
