// Copyright 2021 Tencent Inc. All rights reserved.
//
// 微信支付营销系统开放API
//
// 新增立减金api
//
// API version: 3.4.0

// Code generated by WechatPay APIv3 Generator based on [OpenAPI Generator](https://openapi-generator.tech); DO NOT EDIT.

package cashcoupons

import (
	"context"
	"fmt"
	nethttp "net/http"
	neturl "net/url"
	"strings"

	"github.com/wechatpay-apiv3/wechatpay-go/core"
	"github.com/wechatpay-apiv3/wechatpay-go/core/consts"
	"github.com/wechatpay-apiv3/wechatpay-go/services"
)

type PlatformFavorApiService services.Service

// CreatePlatformFavor 创建立减金批次
//
// 创建立减金批次
//
// 接口频率：1000/min
//
// 前置条件：开通代金券产品权限
func (a *PlatformFavorApiService) CreatePlatformFavor(ctx context.Context, req CreatePlatformFavorRequest) (resp *PlatformFavorStockEntity, result *core.APIResult, err error) {
	var (
		localVarHTTPMethod   = nethttp.MethodPost
		localVarPostBody     interface{}
		localVarQueryParams  neturl.Values
		localVarHeaderParams = nethttp.Header{}
	)

	localVarPath := consts.WechatPayAPIServer + "/v3/marketing/favor/platform-favor"
	// Make sure All Required Params are properly set

	// Setup Body Params
	localVarPostBody = req

	// Determine the Content-Type Header
	localVarHTTPContentTypes := []string{"application/json"}
	// Setup Content-Type
	localVarHTTPContentType := core.SelectHeaderContentType(localVarHTTPContentTypes)

	// Perform Http Request
	result, err = a.Client.Request(ctx, localVarHTTPMethod, localVarPath, localVarHeaderParams, localVarQueryParams, localVarPostBody, localVarHTTPContentType)
	if err != nil {
		return nil, result, err
	}

	// Extract PlatformFavorStockEntity from Http Response
	resp = new(PlatformFavorStockEntity)
	err = core.UnMarshalResponse(result.Response, resp)
	if err != nil {
		return nil, result, err
	}
	return resp, result, nil
}

// GetPlatformFavor 查询立减金批次信息
//
// 查询立减金批次详情
//
// 接口频率：500qps
//
// 前置条件：已创建立减金批次
func (a *PlatformFavorApiService) GetPlatformFavor(ctx context.Context, req GetPlatformFavorRequest) (resp *PlatformFavorStockEntity, result *core.APIResult, err error) {
	var (
		localVarHTTPMethod   = nethttp.MethodGet
		localVarPostBody     interface{}
		localVarQueryParams  neturl.Values
		localVarHeaderParams = nethttp.Header{}
	)

	// Make sure Path Params are properly set
	if req.StockId == nil {
		return nil, nil, fmt.Errorf("field `StockId` is required and must be specified in GetPlatformFavorRequest")
	}

	localVarPath := consts.WechatPayAPIServer + "/v3/marketing/favor/platform-favor/{stock_id}"
	// Build Path with Path Params
	localVarPath = strings.Replace(localVarPath, "{"+"stock_id"+"}", neturl.PathEscape(core.ParameterToString(*req.StockId, "")), -1)

	// Make sure All Required Params are properly set
	if req.StockCreatorMchid == nil {
		return nil, nil, fmt.Errorf("field `StockCreatorMchid` is required and must be specified in GetPlatformFavorRequest")
	}

	// Setup Query Params
	localVarQueryParams = neturl.Values{}
	localVarQueryParams.Add("stock_creator_mchid", core.ParameterToString(*req.StockCreatorMchid, ""))

	// Determine the Content-Type Header
	localVarHTTPContentTypes := []string{}
	// Setup Content-Type
	localVarHTTPContentType := core.SelectHeaderContentType(localVarHTTPContentTypes)

	// Perform Http Request
	result, err = a.Client.Request(ctx, localVarHTTPMethod, localVarPath, localVarHeaderParams, localVarQueryParams, localVarPostBody, localVarHTTPContentType)
	if err != nil {
		return nil, result, err
	}

	// Extract PlatformFavorStockEntity from Http Response
	resp = new(PlatformFavorStockEntity)
	err = core.UnMarshalResponse(result.Response, resp)
	if err != nil {
		return nil, result, err
	}
	return resp, result, nil
}
